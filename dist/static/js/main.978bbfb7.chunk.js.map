{"version":3,"sources":["services/phonebook.js","App.js","index.js"],"names":["baseUrl","getAll","axios","get","then","response","data","newObject","post","update","id","put","delete","Notification","_ref","message","type","console","log","_jsx","className","children","Filter","props","_jsxs","value","search","onChange","handler","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","Person","_ref2","person","deleteEntry","_Fragment","name","number","onClick","Persons","persons","map","App","setPersons","useState","setNewName","setNewNumber","setNewSearch","TYPE","notification","setNotification","updateNotification","setTimeout","useEffect","phService","phonebook","catch","error","event","target","preventDefault","newPerson","includes","window","confirm","find","returnedPerson","concat","filter","toLowerCase","personsToShow","personToDel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.978bbfb7.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n}\n\nconst deleteEntry = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, deleteEntry }","import React, { useEffect, useState } from 'react'\nimport phService from './services/phonebook'\n\nconst Notification = ({message, type}) => {\n  console.log(\"Call to Notification\")\n\n  if(message === null || type === null) {\n    console.log(\"Returning null, params: \", message, type)\n    return null\n  }\n\n  return(\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nconst Filter = (props) => <div>filter shown with <input value={props.search} onChange={props.handler}/></div>\n\nconst PersonForm = (props) => (\n  <form onSubmit={props.addPerson}>\n    <div>\n      name: <input value={props.newName} onChange={props.handleNameChange}/>\n    </div>\n    <div>\n      number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nconst Person = ( {person, deleteEntry} ) => {\n  \n  return (\n    <>\n      {`${person.name} ${person.number}`} <button onClick={() => deleteEntry(person.id)}>delete</button> <br />\n    </>\n  )\n}\n\nconst Persons = (props) => (\n  <div>\n    {props.persons.map( person => <Person key={person.id} person={person} deleteEntry={props.deleteEntry}/>)}\n  </div>\n)\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ search, setNewSearch ] = useState('')\n\n  const TYPE = {\n    ERROR: \"error\",\n    SUCCESS: \"success\"\n  }\n  const [ notification, setNotification ] = useState( {message: null, type: TYPE.ERROR})\n\n  const updateNotification = (message, type) => {\n    setNotification( {message: message, type: type} )\n    setTimeout( () => { setNotification( {message: null, type: null} ) }, 5000)\n  }\n\n  useEffect( () => {\n    phService\n      .getAll()\n      .then( phonebook => setPersons( phonebook ) )\n      .catch( error => { updateNotification(\"Unable to fetch phonebook from the server. Please refresh the page and try again!\", TYPE.ERROR) } ) \n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault() // prevents default form behaviour which is to submit a post request\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if ( persons.map( person => person.name ).includes(newPerson.name) ) {\n      if ( persons.map( person => person.number).includes(newPerson.number) ){\n        updateNotification(`The entry ${newName} ${newNumber} is already added to the phonebook`, TYPE.ERROR )\n      } else {\n        const confirmed = window.confirm(`Update phone number for entry '${newPerson.name} to ${newPerson.number}'?`)\n        if (confirmed) {\n          phService\n          .update( persons.find( person => person.name === newPerson.name).id, newPerson )\n          .then( returnedPerson => {\n            setPersons(persons.map( person => person.name === newPerson.name ? returnedPerson : person ))\n            setNewName('')\n            setNewNumber('')\n            updateNotification(`Successfully updated phone number for entry '${newPerson.name}' to '${newPerson.number}'!`, TYPE.SUCCESS)\n          } )\n          .catch( error => {\n            updateNotification(`Error updating the number for the entry '${newPerson.name}' to the phonebook.\\n${error.response.data.error}.\\nPlease refresh the page and try again!`, TYPE.ERROR)\n          })\n        }\n      }\n      \n    } else {\n\n      phService\n        .create(newPerson)\n        .then( returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          updateNotification(`Successfully created entry '${newPerson.name} ${newPerson.number}'!`, TYPE.SUCCESS)\n        } )\n        .catch( error => {\n          updateNotification(`Error submitting the new entry: ${newPerson.name} ${newPerson.number} to the phonebook.\\n${error.response.data.error}.\\nPlease try again!`, TYPE.ERROR)\n        })\n    }\n  }\n\n  const deleteEntry = (id) => {\n    const personToDel = persons.find( person => person.id === id)\n    const confirmed = window.confirm(`Delete entry ${personToDel.name} ${personToDel.number}?`)\n    \n    if(!confirmed) { \n      updateNotification(`the deletion of entry ${personToDel.name} ${personToDel.number} was cancelled`, TYPE.SUCCESS)\n    } else {\n      phService\n      .deleteEntry(id)\n      .then( response => {\n          console.log(response)\n          setPersons( persons.filter( person => person.id !== personToDel.id ) )\n          updateNotification(`Successfully deleted entry ${personToDel.name} ${personToDel.number}`, TYPE.SUCCESS)\n        }\n      ).catch( error => {\n          updateNotification(`Unable to delete entry ${personToDel.name} ${personToDel.number} from the server. Please try again!`, TYPE.ERROR)\n      })\n    }\n  }\n\n  const personsToShow = ( search ) => search === ''\n    ? persons\n    : persons.filter( person => person.name.toLowerCase().includes( search.toLowerCase() ))\n\n\n  const updateSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <div>\n      <Notification message={notification.message} type={notification.type}/>\n      <h2>Phonebook</h2>\n      <Filter search={search} handler={updateSearch}/>\n      <h3>add a new entry</h3>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow(search)} deleteEntry={deleteEntry}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}
{"version":3,"sources":["services/phonebook.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","type","console","log","className","Filter","props","value","search","onChange","handler","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","Person","person","deleteEntry","name","number","onClick","Persons","persons","map","App","useState","setPersons","setNewName","setNewNumber","setNewSearch","TYPE","notification","setNotification","updateNotification","setTimeout","useEffect","phService","phonebook","catch","error","event","target","preventDefault","newPerson","includes","window","confirm","find","returnedPerson","concat","filter","toLowerCase","personsToShow","personToDel","ReactDOM","render","document","getElementById"],"mappings":"sLAEMA,EAAU,eAkBD,EAhBA,WACb,OAAOC,IAAMC,IAAIF,GAASG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAevC,EAZA,SAAAC,GACb,OAAOL,IAAMM,KAAKP,EAASM,GAAWH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAWnD,EARA,SAACG,EAAIF,GAClB,OAAOL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAAWH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO7D,EAJK,SAACG,GACjB,OAAOP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,K,OCdhCG,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,KAG9B,OAFAC,QAAQC,IAAI,wBAEG,OAAZH,GAA6B,OAATC,GACrBC,QAAQC,IAAI,2BAA4BH,EAASC,GAC1C,MAIP,qBAAKG,UAAWH,EAAhB,SACGD,KAKDK,EAAS,SAACC,GAAD,OAAW,qDAAuB,uBAAOC,MAAOD,EAAME,OAAQC,SAAUH,EAAMI,cAEvFC,EAAa,SAACL,GAAD,OACjB,uBAAMM,SAAUN,EAAMO,UAAtB,UACE,yCACQ,uBAAON,MAAOD,EAAMQ,QAASL,SAAUH,EAAMS,sBAErD,2CACU,uBAAOR,MAAOD,EAAMU,UAAWP,SAAUH,EAAMW,wBAEzD,8BACE,wBAAQhB,KAAK,SAAb,uBAKAiB,EAAS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAExB,OACE,+CACMD,EAAOE,KADb,YACqBF,EAAOG,QAD5B,IACsC,wBAAQC,QAAS,kBAAMH,EAAYD,EAAOvB,KAA1C,oBADtC,IACqG,2BAKnG4B,EAAU,SAAClB,GAAD,OACd,8BACGA,EAAMmB,QAAQC,KAAK,SAAAP,GAAM,OAAI,cAAC,EAAD,CAAwBA,OAAQA,EAAQC,YAAad,EAAMc,aAA9CD,EAAOvB,UA4HvC+B,EAxHH,WACV,MAAgCC,mBAAS,IAAzC,mBAAQH,EAAR,KAAiBI,EAAjB,KAEA,EAAgCD,mBAAS,IAAzC,mBAAQd,EAAR,KAAiBgB,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAQZ,EAAR,KAAmBe,EAAnB,KACA,EAAiCH,mBAAS,IAA1C,mBAAQpB,EAAR,KAAgBwB,EAAhB,KAEMC,EACG,QADHA,EAEK,UAEX,EAA0CL,mBAAU,CAAC5B,QAAS,KAAMC,KAAMgC,IAA1E,mBAAQC,EAAR,KAAsBC,EAAtB,KAEMC,EAAqB,SAACpC,EAASC,GACnCkC,EAAiB,CAACnC,QAASA,EAASC,KAAMA,IAC1CoC,YAAY,WAAQF,EAAiB,CAACnC,QAAS,KAAMC,KAAM,SAAW,MAGxEqC,qBAAW,WACTC,IAEGhD,MAAM,SAAAiD,GAAS,OAAIX,EAAYW,MAC/BC,OAAO,SAAAC,GAAWN,EAAmB,oFAAqFH,QAC5H,IAoFH,OACE,gCACE,cAAC,EAAD,CAAcjC,QAASkC,EAAalC,QAASC,KAAMiC,EAAajC,OAChE,2CACA,cAAC,EAAD,CAAQO,OAAQA,EAAQE,QAhBP,SAACiC,GACpBX,EAAaW,EAAMC,OAAOrC,UAgBxB,iDACA,cAAC,EAAD,CAAYM,UAxFE,SAAC8B,GACjBA,EAAME,iBAEN,IAAMC,EAAY,CAChBzB,KAAMP,EACNQ,OAAQN,GAGLS,EAAQC,KAAK,SAAAP,GAAM,OAAIA,EAAOE,QAAO0B,SAASD,EAAUzB,MACtDI,EAAQC,KAAK,SAAAP,GAAM,OAAIA,EAAOG,UAAQyB,SAASD,EAAUxB,QAC5Dc,EAAmB,aAAD,OAActB,EAAd,YAAyBE,EAAzB,sCAAwEiB,GAExEe,OAAOC,QAAP,yCAAiDH,EAAUzB,KAA3D,eAAsEyB,EAAUxB,OAAhF,QAEhBiB,EACSd,EAAQyB,MAAM,SAAA/B,GAAM,OAAIA,EAAOE,OAASyB,EAAUzB,QAAMzB,GAAIkD,GACpEvD,MAAM,SAAA4D,GACLtB,EAAWJ,EAAQC,KAAK,SAAAP,GAAM,OAAIA,EAAOE,OAASyB,EAAUzB,KAAO8B,EAAiBhC,MACpFW,EAAW,IACXC,EAAa,IACbK,EAAmB,gDAAD,OAAiDU,EAAUzB,KAA3D,iBAAwEyB,EAAUxB,OAAlF,MAA8FW,MAEjHQ,OAAO,SAAAC,GACNN,EAAmB,4CAAD,OAA6CU,EAAUzB,KAAvD,+IAC2FY,MAOnHM,EACUO,GACPvD,MAAM,SAAA4D,GACLtB,EAAWJ,EAAQ2B,OAAOD,IAC1BrB,EAAW,IACXC,EAAa,IACbK,EAAmB,+BAAD,OAAgCU,EAAUzB,KAA1C,YAAkDyB,EAAUxB,OAA5D,MAAwEW,MAE3FQ,OAAO,SAAAC,GACNN,EAAmB,mCAAD,OAAoCU,EAAUzB,KAA9C,YAAsDyB,EAAUxB,OAAhE,wCAA8GW,OAgDlGnB,QAASA,EAASE,UAAWA,EAAWD,iBAdrD,SAAC4B,GACxBb,EAAWa,EAAMC,OAAOrC,QAawFU,mBAVvF,SAAC0B,GAC1BZ,EAAaY,EAAMC,OAAOrC,UAUxB,yCACA,cAAC,EAAD,CAASkB,QAzBS,SAAEjB,GAAF,MAAyB,KAAXA,EAChCiB,EACAA,EAAQ4B,QAAQ,SAAAlC,GAAM,OAAIA,EAAOE,KAAKiC,cAAcP,SAAUvC,EAAO8C,kBAuBnDC,CAAc/C,GAASY,YA7CzB,SAACxB,GACnB,IAAM4D,EAAc/B,EAAQyB,MAAM,SAAA/B,GAAM,OAAIA,EAAOvB,KAAOA,KACxCoD,OAAOC,QAAP,uBAA+BO,EAAYnC,KAA3C,YAAmDmC,EAAYlC,OAA/D,MAKhBiB,EACa3C,GACZL,MAAM,SAAAC,GACHU,QAAQC,IAAIX,GACZqC,EAAYJ,EAAQ4B,QAAQ,SAAAlC,GAAM,OAAIA,EAAOvB,KAAO4D,EAAY5D,OAChEwC,EAAmB,8BAAD,OAA+BoB,EAAYnC,KAA3C,YAAmDmC,EAAYlC,QAAUW,MAE7FQ,OAAO,SAAAC,GACLN,EAAmB,0BAAD,OAA2BoB,EAAYnC,KAAvC,YAA+CmC,EAAYlC,OAA3D,uCAAwGW,MAV9HG,EAAmB,yBAAD,OAA0BoB,EAAYnC,KAAtC,YAA8CmC,EAAYlC,OAA1D,kBAAkFW,U,MCxH1GwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1c69a3e9.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n}\n\nconst deleteEntry = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, deleteEntry }","import React, { useEffect, useState } from 'react'\nimport phService from './services/phonebook'\n\nconst Notification = ({message, type}) => {\n  console.log(\"Call to Notification\")\n\n  if(message === null || type === null) {\n    console.log(\"Returning null, params: \", message, type)\n    return null\n  }\n\n  return(\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nconst Filter = (props) => <div>filter shown with <input value={props.search} onChange={props.handler}/></div>\n\nconst PersonForm = (props) => (\n  <form onSubmit={props.addPerson}>\n    <div>\n      name: <input value={props.newName} onChange={props.handleNameChange}/>\n    </div>\n    <div>\n      number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nconst Person = ( {person, deleteEntry} ) => {\n  \n  return (\n    <>\n      {`${person.name} ${person.number}`} <button onClick={() => deleteEntry(person.id)}>delete</button> <br />\n    </>\n  )\n}\n\nconst Persons = (props) => (\n  <div>\n    {props.persons.map( person => <Person key={person.id} person={person} deleteEntry={props.deleteEntry}/>)}\n  </div>\n)\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ search, setNewSearch ] = useState('')\n\n  const TYPE = {\n    ERROR: \"error\",\n    SUCCESS: \"success\"\n  }\n  const [ notification, setNotification ] = useState( {message: null, type: TYPE.ERROR})\n\n  const updateNotification = (message, type) => {\n    setNotification( {message: message, type: type} )\n    setTimeout( () => { setNotification( {message: null, type: null} ) }, 5000)\n  }\n\n  useEffect( () => {\n    phService\n      .getAll()\n      .then( phonebook => setPersons( phonebook ) )\n      .catch( error => { updateNotification(\"Unable to fetch phonebook from the server. Please refresh the page and try again!\", TYPE.ERROR) } ) \n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault() // prevents default form behaviour which is to submit a post request\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if ( persons.map( person => person.name ).includes(newPerson.name) ) {\n      if ( persons.map( person => person.number).includes(newPerson.number) ){\n        updateNotification(`The entry ${newName} ${newNumber} is already added to the phonebook`, TYPE.ERROR )\n      } else {\n        const confirmed = window.confirm(`Update phone number for entry '${newPerson.name} to ${newPerson.number}'?`)\n        if (confirmed) {\n          phService\n          .update( persons.find( person => person.name === newPerson.name).id, newPerson )\n          .then( returnedPerson => {\n            setPersons(persons.map( person => person.name === newPerson.name ? returnedPerson : person ))\n            setNewName('')\n            setNewNumber('')\n            updateNotification(`Successfully updated phone number for entry '${newPerson.name}' to '${newPerson.number}'!`, TYPE.SUCCESS)\n          } )\n          .catch( error => {\n            updateNotification(`Error updating the number for the entry '${newPerson.name}' to the phonebook.\n                                The entry was probably deleted from the server. Please refresh the page and try again!`, TYPE.ERROR)\n          })\n        }\n      }\n      \n    } else {\n\n      phService\n        .create(newPerson)\n        .then( returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          updateNotification(`Successfully created entry '${newPerson.name} ${newPerson.number}'!`, TYPE.SUCCESS)\n        } )\n        .catch( error => {\n          updateNotification(`Error submitting the new entry: ${newPerson.name} ${newPerson.number} to the phonebook. Please try again!`, TYPE.ERROR)\n        })\n    }\n  }\n\n  const deleteEntry = (id) => {\n    const personToDel = persons.find( person => person.id === id)\n    const confirmed = window.confirm(`Delete entry ${personToDel.name} ${personToDel.number}?`)\n    \n    if(!confirmed) { \n      updateNotification(`the deletion of entry ${personToDel.name} ${personToDel.number} was cancelled`, TYPE.SUCCESS)\n    } else {\n      phService\n      .deleteEntry(id)\n      .then( response => {\n          console.log(response)\n          setPersons( persons.filter( person => person.id !== personToDel.id ) )\n          updateNotification(`Successfully deleted entry ${personToDel.name} ${personToDel.number}`, TYPE.SUCCESS)\n        }\n      ).catch( error => {\n          updateNotification(`Unable to delete entry ${personToDel.name} ${personToDel.number} from the server. Please try again!`, TYPE.ERROR)\n      })\n    }\n  }\n\n  const personsToShow = ( search ) => search === ''\n    ? persons\n    : persons.filter( person => person.name.toLowerCase().includes( search.toLowerCase() ))\n\n\n  const updateSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <div>\n      <Notification message={notification.message} type={notification.type}/>\n      <h2>Phonebook</h2>\n      <Filter search={search} handler={updateSearch}/>\n      <h3>add a new entry</h3>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow(search)} deleteEntry={deleteEntry}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}